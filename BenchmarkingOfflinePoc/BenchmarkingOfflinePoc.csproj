<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>3.5</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes);node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="dbup-core" Version="4.2.0" />
    <PackageReference Include="dbup-sqlserver" Version="4.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="package-lock.json" />
    <Content Remove="package.json" />
    <Content Remove="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\actions\CaseActions.tsx" />
    <None Remove="ClientApp\components\Header.tsx" />
    <None Remove="ClientApp\reducers\CaseReducer.tsx" />
    <None Remove="ClientApp\reducers\Store.tsx" />
    <None Remove="Migrations\Script0001 - Create Case table and data.sql" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Migrations\Script0001 - Create Case table and data.sql" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Migrations\Manual\" />
    <Folder Include="Models\DatabaseExtensions\" />
    <Folder Include="Util\" />
    <Folder Include="wwwroot\dist\" />
    <Folder Include="wwwroot\img\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="package-lock.json" />
    <None Include="package.json" />
    <None Include="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\actions\CaseActions.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Header.tsx" />
    <TypeScriptCompile Include="ClientApp\reducers\CaseReducer.tsx" />
    <TypeScriptCompile Include="ClientApp\store\Store.tsx" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <ItemGroup>
      <FilesToDelete Include="wwwroot\dist\**\*" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <Exec Command="npm install" />
    <Exec Command="npm run build:prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
