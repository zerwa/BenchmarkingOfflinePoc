<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptToolsVersion>3.5</TypeScriptToolsVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <IsPackable>false</IsPackable>
    <DefaultItemExcludes>$(DefaultItemExcludes);node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Models\DatabaseExtensions\**" />
    <Compile Remove="Util\**" />
    <Content Remove="Models\DatabaseExtensions\**" />
    <Content Remove="Util\**" />
    <EmbeddedResource Remove="Models\DatabaseExtensions\**" />
    <EmbeddedResource Remove="Util\**" />
    <None Remove="Models\DatabaseExtensions\**" />
    <None Remove="Util\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="dbup-core" Version="4.2.0" />
    <PackageReference Include="dbup-sqlserver" Version="4.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="package-lock.json" />
    <Content Remove="package.json" />
    <Content Remove="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\actions\CaseActions.tsx" />
    <None Remove="ClientApp\actions\SurveyActions.tsx" />
    <None Remove="ClientApp\components\CopyModal.tsx" />
    <None Remove="ClientApp\components\Header.tsx" />
    <None Remove="ClientApp\components\Question.tsx" />
    <None Remove="ClientApp\definitions\models.ts" />
    <None Remove="ClientApp\reducers\CaseReducer.tsx" />
    <None Remove="ClientApp\reducers\Store.tsx" />
    <None Remove="ClientApp\reducers\SurveyReducer.tsx" />
    <None Remove="Migrations\Script0001 - Create Case table and data.sql" />
    <None Remove="Migrations\Script0002 - Create Metric tables.sql" />
    <None Remove="Migrations\Script0003 - Template creation.sql" />
    <None Remove="Migrations\Script0004 - Additional Template.sql" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Migrations\Script0001 - Create Case table and data.sql" />
    <EmbeddedResource Include="Migrations\Script0002 - Create Metric tables.sql" />
    <EmbeddedResource Include="Migrations\Script0003 - Template creation.sql" />
    <EmbeddedResource Include="Migrations\Script0004 - Additional Template.sql" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Migrations\Manual\" />
    <Folder Include="wwwroot\img\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="package-lock.json" />
    <None Include="package.json" />
    <None Include="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\actions\CaseActions.tsx" />
    <TypeScriptCompile Include="ClientApp\actions\SurveyActions.tsx" />
    <TypeScriptCompile Include="ClientApp\components\CopyModal.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Header.tsx" />
    <TypeScriptCompile Include="ClientApp\components\Question.tsx" />
    <TypeScriptCompile Include="ClientApp\definitions\models.ts" />
    <TypeScriptCompile Include="ClientApp\reducers\CaseReducer.tsx" />
    <TypeScriptCompile Include="ClientApp\reducers\SurveyReducer.tsx" />
    <TypeScriptCompile Include="ClientApp\store\Store.tsx" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <ItemGroup>
      <FilesToDelete Include="wwwroot\dist\**\*" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <Exec Command="npm install" />
    <Exec Command="npm run build:prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
    <TypeScriptModuleKind />
    <TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

</Project>
